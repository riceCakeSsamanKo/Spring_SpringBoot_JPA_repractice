buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //H2 데이터베이스 추가
    runtimeOnly 'com.h2database:h2'

/* 1. web */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

///* 2. 배포시 내장톰캣을 사용하지 않을거라는 dependency */
//    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

/* 3. lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

/* 4. devtools */
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

/* 5. thymeleaf */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

/* 6. mybatis */
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'

/* 7. MariaDB */
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

/* 8. JDBC */
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

/* 9. JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

/* 10-4. querydsl dependencies 추가 */
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

/* 11. thymeleaf-layout-dialect */
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.0.0'

///* 12. spring-boot-starter-security */
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'

/* 13. validation(Bean Validation) */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

/* 14. modelmapper */
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'

///* 15. thymeleaf-extras-springsecurity5 */
//    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5'

///* 16. spring-security-test */
//    testImplementation group: 'org.springframework.security', name: 'spring-security-test'

/* 17. hibernate5module*/
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

/* 18. p6spy */
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

/* 19.junit */
    implementation 'junit:junit:4.13.1'
}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝